<?xml version="1.0"?>
<launch>
  <env name="ROSCONSOLE_FORMAT" value="[${severity}] [${time}] [${node}]: ${message}" />
  
  <!-- INPUT ARGS -->
  <arg name="type" default="real"/> <!-- real | simulator -->
  <arg name="localization" default="eskf"/> <!-- ekf | eskf-->

  <!-- PARAMETERS -->
  <rosparam command="load" file="$(find auv_setup)/config/robots/beluga.yaml"/>
  <rosparam command="load" file="$(find auv_setup)/config/environments/trondheim_freshwater.yaml"/>


  <!-- INCLUDES -->
  <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch"/>
  <include file="$(find motion_launch)/launch/motion.launch"            pass_all_args="true"/>
  <include file="$(find navigation_launch)/launch/navigation.launch"    pass_all_args="true"/>

  <!-- Joystick nodes for ROV missions -->
  <node pkg="joystick_interface" type="joystick_interface.py" name="joystick_interface" output="screen"/>

  <!-- DRIVERS -->
  <group if="$(eval type == 'real')">
    <!-- IMU -->
    <node pkg="driver_stim300" type="stim300_driver_node" name="driver_stim300" args="/dev/ttyUSB0"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_imu0" args="0.029 0 0.091 3.14159 0 0 base_link imu_0" />

    <!-- DVL -->	
    <node pkg="dvl1000_ros" type="publisherDVL1000.py" name="publisherDVL1000" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_DVL" args="0.015 0 -0.075 3.14159 3.14159 0 base_link dvl_link" />

    <!-- Remap pressure reading from DVL -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="odom_to_Pressure" args="0 0 0 0 0 0 odom pressure_link" />

    <!-- Driver for communication between Xavier and thrusters over PCA9685 board -->
    <node pkg="thruster_interface" type="thruster_interface_node.py" name="thruster_interface" output="screen" />
    <node pkg="pca9685_ros_driver" type="pca9685_ros_node.py" name="pca9685_ros_driver" output="screen" />

    <!-- ZED2 camera node -->
    <include file="$(find zed_wrapper)/launch/zed2.launch" />
    
    <!-- For monitoring internal state -->
    <include file="$(find internal_status)/launch/internal_status.launch"/>


  </group>

</launch>
